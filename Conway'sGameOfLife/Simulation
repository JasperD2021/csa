import java.util.Scanner;
import java.util.concurrent.TimeUnit;

enum Seed {
    // Still lifes
    Block,
    Bee_hive,
    Loaf,
    Boat,
    Tub,
    // Oscillators
    Blinker,
    Toad,
    Beacon,
    // Spaceships
    Glider,
    // Random
    Random,
    GliderGun
        }

public class Simulation {

    private Board board;

    public void Simulation(Seed seed) {
        board = new Board(seed);
        board.displayBoard();
        for (int counter = 0; counter < 1000; counter++) {
            boolean[][] board2 = new boolean[50][50];
            for (int i = 0; i < board.getHeight(); i++) {
                for (int j = 0; j < board.getWidth(); j++) {
                    Tile tile = board.getTile(i, j);
                    int numNeighbors = board.getNeighbors(i, j);

                    boolean update = tile.getState();

                    if (tile.getState()) {
                        if (numNeighbors < 2) {
                            update = !tile.getState();
                        } else if (numNeighbors == 2 || numNeighbors == 3) {
                            update = tile.getState();
                        } else if (numNeighbors > 3) {
                            update = !tile.getState();
                        }
                    }
                    else {
                        if (numNeighbors == 3) {
                            update = !tile.getState();
                        }
                    }
                    board2[i][j] = update;
                }
            }

            for (int i = 0; i < board.getHeight(); i++) {
                for (int j = 0; j < board.getWidth(); j++) {
                    Tile tile = board.getTile(i, j);
                    tile.setState(board2[i][j]);
                }
            }

            board.displayBoard();
            try {
                TimeUnit.MILLISECONDS.sleep(200);
            } catch (InterruptedException e) {
                e.printStackTrace();
                return;
            }
        }

    }

    public static void main(String[] args) {
        Simulation s = new Simulation();
        s.Simulation(s.selectedMode());
    }

    public Seed selectedMode() {
        System.out.println("Please select a seed");

        System.out.println("Still lifes:");
        System.out.println("Block (1)");
        System.out.println("Bee-Hive (2)");
        System.out.println("Loaf (3)");
        System.out.println("Boat (4)");
        System.out.println("Tub (5)");
        System.out.println("Oscillators:");
        System.out.println("Blinker (6)");
        System.out.println("Toad (7)");
        System.out.println("Beacon (8)");
        System.out.println("Spaceships:");
        System.out.println("Glider (9)");
        System.out.println("Random (10)");
        System.out.println("Glider Gun (11)");

        Scanner scanner = new Scanner(System.in);
        int selected = scanner.nextInt();
        scanner.close();

        switch (selected) {
            case 1:
                return Seed.Block;
            case 2:
                return Seed.Bee_hive;
            case 3:
                return Seed.Loaf;
            case 4:
                return Seed.Boat;
            case 5:
                return Seed.Tub;
            case 6:
                return Seed.Blinker;
            case 7:
                return Seed.Toad;
            case 8:
                return Seed.Beacon;
            case 9:
                return Seed.Glider;
            case 10:
                return Seed.Random;
            case 11:
                return Seed.GliderGun;
            default:
                System.out.println("Invalid option, selecting default");
                return Seed.Random;
        }
    }

}
